<===> no_saturation/white/input.scss
a {b: grayscale(white)}

<===> no_saturation/white/output.css
a {
  b: hsl(0 0% 100%);
}

<===> no_saturation/white/output-libsass.css
a {
  b: cyan;
}

<===>
================================================================================
<===> no_saturation/black/input.scss
a {b: grayscale(black)}

<===> no_saturation/black/output.css
a {
  b: hsl(0 0% 0%);
}

<===> no_saturation/black/output-libsass.css
a {
  b: black;
}

<===>
================================================================================
<===> no_saturation/gray/input.scss
a {b: grayscale(#494949)}

<===> no_saturation/gray/output.css
a {
  b: hsl(0 0% 28.6%);
}

<===> no_saturation/gray/output-libsass.css
a {
  b: #494949;
}

<===>
================================================================================
<===> max_saturation/input.scss
a {b: grayscale(red)}

<===> max_saturation/output.css
a {
  b: hsl(0 0% 50%);
}

<===> max_saturation/output-libsass.css
a {
  b: gray;
}

<===>
================================================================================
<===> mid_saturation/input.scss
a {b: grayscale(#633736)}

<===> mid_saturation/output.css
a {
  b: hsl(1.33 0% 30%);
}

<===> mid_saturation/output-libsass.css
a {
  b: #4d4d4d;
}

<===>
================================================================================
<===> alpha/input.scss
a {b: grayscale(rgba(#633736, 0.3))}

<===> alpha/output.css
a {
  b: hsl(1.33 0% 30% / 0.3);
}

<===> alpha/output-libsass.css
a {
  b: rgba(77, 77, 77, 0.3);
}

<===>
================================================================================
<===> number/input.scss
// A number should produce a plain function string, for CSS filter functions.
a {b: grayscale(15%)}

<===> number/output.css
a {
  b: grayscale(15%);
}

<===>
================================================================================
<===> named/input.scss
a {b: grayscale($color: white)}

<===> named/output.css
a {
  b:  hsl(0 0% 100%);
}

<===> named/output-libsass.css
a {
  b: white;
}

<===>
================================================================================
<===> non_legacy/rectangular/options.yml
:ignore_for:
  - libsass

<===> non_legacy/rectangular/input.scss
a {b: grayscale(lab(62.2345% -34.9638 47.7721))}

<===> non_legacy/rectangular/output.css
a {
  b: lab(44.3 0 0);
}

<===>
================================================================================
<===> non_legacy/polar/options.yml
:ignore_for:
  - libsass

<===> non_legacy/polar/input.scss
a {b: grayscale(lch(54.3 107 40.9))}

<===> non_legacy/polar/output.css
a {
  b: lch(56.9 0 0);
}

<===>
================================================================================
<===> non_legacy/specialty/options.yml
:ignore_for:
  - libsass

<===> non_legacy/specialty/input.scss
a {b: grayscale(color(xyz-d65 0.41 0.21 0.02))}

<===> non_legacy/specialty/output.css
a {
  b: color(xyz-d65 0.23 0.24 0.27);
}

<===>
================================================================================
<===> error/too_few_args/input.scss
a {b: grayscale()}

<===> error/too_few_args/error
Error: Missing argument $color.
  ,--> input.scss
1 | a {b: grayscale()}
  |       ^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function grayscale($color) {
  |           ================= declaration
  '
  input.scss 1:7  root stylesheet

<===> error/too_few_args/error-libsass
Error: Function grayscale is missing argument $color.
        on line 1 of input.scss
>> a {b: grayscale()}

   ------^

<===>
================================================================================
<===> error/too_many_args/input.scss
a {b: grayscale(red, 1)}

<===> error/too_many_args/error
Error: Only 1 argument allowed, but 2 were passed.
  ,--> input.scss
1 | a {b: grayscale(red, 1)}
  |       ^^^^^^^^^^^^^^^^^ invocation
  '
  ,--> sass:color
1 | @function grayscale($color) {
  |           ================= declaration
  '
  input.scss 1:7  root stylesheet

<===> error/too_many_args/error-libsass
Error: wrong number of arguments (2 for 1) for `grayscale'
        on line 1:7 of input.scss
>> a {b: grayscale(red, 1)}

   ------^

<===>
================================================================================
<===> error/type/input.scss
a {b: grayscale(c)}

<===> error/type/error
Error: $color: c is not a color.
  ,
1 | a {b: grayscale(c)}
  |       ^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===> error/type/error-libsass
Error: argument `$color` of `grayscale($color)` must be a color
        on line 1:7 of input.scss, in function `grayscale`
        from line 1:7 of input.scss
>> a {b: grayscale(c)}

   ------^
